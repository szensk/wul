; metamethod may be set on types or individual values
(defmacro infix (f b) (f self b))
(set-metamethod Number apply infix) ; apply is used for macros

(print "(5 + 2) is {(5 + 2)}")   ; prints 7
(print "(5 - 2) is {(5 - 2)}")   ; prints 3
(print "(5 ** 2) is {(5 ** 2)}") ; prints 25

(print 'breaking math')
(defn breakmath (n1 f n2) (f (* n1 2) n2))
(set-metamethod 5 invoke breakmath) ; invoke is used for functions

; now 5 will use its own metamethod
(print "(5 + 2) is {(5 + 2)}")   ; prints 12
(print "(5 - 2) is {(5 - 2)}")   ; prints 8

; all other numbers, including 6, will use the Number metamethod
(print "(6 + 2) is {(6 + 2)}")   ; prints 8
(print "(6 - 2) is {(6 - 2)}")   ; prints 4
