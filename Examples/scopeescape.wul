; Macro functions are evaluated with respect to definition environment.
(def scope-escape (let a 5 (defmacro noname () (identity a))))
; if the macro creates a function
; the function is bound to the scope in which the macro was called
; lambda is considered to have been defined there
(def get-a 
	(let a 5 
		(defmacro noname () 
			(do (print "while expanding the macro a is {a}")
				`(lambda (identity a))
			)
		)
	)
) 

(def a 10)
(global a 15)
(print (scope-escape)) ; prints 5
(print ((get-a))) ; prints 10 
